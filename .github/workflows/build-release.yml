
name: Build Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number ('0.x.y')"
        required: true

jobs:
  build_binaries:
    name: "Build binaries"
    uses: ./.github/workflows/_shared-build.yaml
    with:
      release: "v${{ inputs.version }}"
      docker: true
      repository: "pk910/dora-the-explorer"
      tag: "v${{ inputs.version }}"
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  create_release:
    name: Create Release
    needs: [build_binaries]
    runs-on: ubuntu-latest
    steps:
    # download build artifacts
    - name: "Download build artifacts"
      uses: actions/download-artifact@v3

    # create draft release
    - name: Create latest release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: "v${{ inputs.version }}"
        tag_name: "v${{ inputs.version }}"
        body: |
          ### Major Changes
          ...

          ### Release Artifacts
          Please read through the [wiki](https://github.com/pk910/dora/wiki) for setup & configuration instructions.
          | Release File  | Description |
          | ------------- | ------------- |
          | [dora_${{ inputs.version }}_windows_amd64.zip](https://github.com/pk910/dora/releases/download/v${{ inputs.version }}/dora_${{ inputs.version }}_windows_amd64.zip) | dora executables for windows/amd64 |
          | [dora_${{ inputs.version }}_linux_amd64.tar.gz](https://github.com/pk910/dora/releases/download/v${{ inputs.version }}/dora_${{ inputs.version }}_linux_amd64.tar.gz) | dora executables for linux/amd64 |
          | [dora_${{ inputs.version }}_linux_arm64.tar.gz](https://github.com/pk910/dora/releases/download/v${{ inputs.version }}/dora_${{ inputs.version }}_linux_arm64.tar.gz) | dora executables for linux/arm64 |
          | [dora_${{ inputs.version }}_darwin_amd64.tar.gz](https://github.com/pk910/dora/releases/download/v${{ inputs.version }}/dora_${{ inputs.version }}_darwin_amd64.tar.gz) | dora executable for macos/amd64 |
          | [dora_${{ inputs.version }}_darwin_arm64.tar.gz](https://github.com/pk910/dora/releases/download/v${{ inputs.version }}/dora_${{ inputs.version }}_darwin_arm64.tar.gz) | dora executable for macos/arm64 |
      env:
        GITHUB_TOKEN: ${{ github.token }}

    # generate & upload release artifacts
    - name: "Generate release package: dora_${{ inputs.version }}_windows_amd64.zip"
      run: |
        cd explorer_windows_amd64
        zip -r -q ../dora_${{ inputs.version }}_windows_amd64.zip .
    - name: "Upload release artifact: dora_${{ inputs.version }}_windows_amd64.zip"
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dora_${{ inputs.version }}_windows_amd64.zip
        asset_name: dora_${{ inputs.version }}_windows_amd64.zip
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: dora_${{ inputs.version }}_linux_amd64.tar.gz"
      run: |
        cd explorer_linux_amd64
        tar -czf ../dora_${{ inputs.version }}_linux_amd64.tar.gz .
    - name: "Upload release artifact: dora_${{ inputs.version }}_linux_amd64.tar.gz"
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dora_${{ inputs.version }}_linux_amd64.tar.gz
        asset_name: dora_${{ inputs.version }}_linux_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: dora_${{ inputs.version }}_linux_arm64.tar.gz"
      run: |
        cd explorer_linux_arm64
        tar -czf ../dora_${{ inputs.version }}_linux_arm64.tar.gz .
    - name: "Upload release artifact: dora_${{ inputs.version }}_linux_arm64.tar.gz"
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dora_${{ inputs.version }}_linux_arm64.tar.gz
        asset_name: dora_${{ inputs.version }}_linux_arm64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: "Generate release package: dora_${{ inputs.version }}_darwin_amd64.tar.gz"
      run: |
        cd explorer_darwin_amd64
        tar -czf ../dora_${{ inputs.version }}_darwin_amd64.tar.gz .
    - name: "Upload release artifact: dora_${{ inputs.version }}_darwin_amd64.tar.gz"
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dora_${{ inputs.version }}_darwin_amd64.tar.gz
        asset_name: dora_${{ inputs.version }}_darwin_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: "Generate release package: dora_${{ inputs.version }}_darwin_arm64.tar.gz"
      run: |
        cd explorer_darwin_arm64
        tar -czf ../dora_${{ inputs.version }}_darwin_arm64.tar.gz .
    - name: "Upload release artifact: dora_${{ inputs.version }}_darwin_arm64.tar.gz"
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dora_${{ inputs.version }}_darwin_arm64.tar.gz
        asset_name: dora_${{ inputs.version }}_darwin_arm64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ github.token }}

  update_latest_image:
    name: Update latest docker image
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      # prepare docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Generate latest docker image
      run: |
        docker manifest create pk910/dora-the-explorer:latest \
        --amend pk910/dora-the-explorer:v${{ inputs.version }}-amd64 \
        --amend pk910/dora-the-explorer:v${{ inputs.version }}-arm64
    - name: Push latest image to docker hub
      run: |
        docker manifest push pk910/dora-the-explorer:latest